apply plugin: "kotlin"
apply plugin: "net.corda.plugins.cordapp"
apply plugin: 'org.jetbrains.dokka'

cordapp {
    info {
        name "DID CorDapp Envelope"
        vendor "UNMAINTAINED"
        targetPlatformVersion corda_platform_version.toInteger()
        minimumPlatformVersion corda_platform_version.toInteger()
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // TODO does this need to be `cordapp` instead?
    compile "com.grack:nanojson:1.1"
    compile "com.natpryce:result4k:2.0.0"
    // https://mvnrepository.com/artifact/commons-codec/commons-codec
    compile group: 'commons-codec', name: 'commons-codec', version: '1.5'
//    // https://mvnrepository.com/artifact/com.nimbusds/nimbus-jose-jwt
//    compile group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '2.10.1'
//    // https://mvnrepository.com/artifact/io.ipfs.multiformats/kotlin-multibase
    compile group: 'io.ipfs.multiformats', name: 'kotlin-multibase', version: '1.0.0'

    testCompile "junit:junit:$junit_version"
    testCompile "com.natpryce:hamkrest:$hamkrest_version"

    // Corda integration dependencies
    cordaRuntime "$corda_release_group:corda:$corda_release_version"

    cordaCompile "$corda_release_group:corda-core:$corda_release_version"
    cordaCompile "$corda_release_group:corda-jackson:$corda_release_version"
    cordaCompile "$corda_release_group:corda-rpc:$corda_release_version"
    testCompile "$corda_release_group:corda-node-driver:$corda_release_version"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        languageVersion = "1.2"
        apiVersion = "1.2"
        jvmTarget = "1.8"
        javaParameters = true   // Useful for reflection.
    }
}
task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
}
